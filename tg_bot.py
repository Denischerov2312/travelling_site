from os.path import join
from os import getenv

import telebot
from more_itertools import chunked
from telebot.types import KeyboardButton
from telebot.types import ReplyKeyboardMarkup
from dotenv import load_dotenv

from weather import get_weather


load_dotenv()

bot = telebot.TeleBot('7301427607:AAH2VYUSuxDRwa6a2c9tn7IecwcKukeCKMk')
TOWNS = [
    '–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫',
    '–ê—Å—Ç—Ä–∞—Ö–∞–Ω—å',
    '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫',
    '–í–ª–∞–¥–∏–º–∏—Ä',
    '–í–æ–ª–≥–æ–≥—Ä–∞–¥',
    '–í–æ—Ä–æ–Ω–µ–∂',
    '–ö–∞–∑–∞–Ω—å',
    '–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥',
    '–ú–æ—Å–∫–≤–∞',
    '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥',
    '–†–æ—Å—Ç–æ–≤',
    '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
    '–°–æ—á–∏',
    '–¢–æ–±–æ–ª—å—Å–∫'
    ]
TOWN_IMAGES_FOLDER = getenv('TOWNS_TG_IMAGES_FOLDER', default='assets/images/town_images/')
HOST_URL = getenv('HOST_URL', default='http://127.0.0.1:5500')


@bot.message_handler(commands=['start'])
def start_bot(message):
    markup = ReplyKeyboardMarkup(input_field_placeholder='Select town:')
    for towns in list(chunked(TOWNS, 2)):
        button_1 = KeyboardButton(towns[0])
        button_2 = KeyboardButton(towns[1])
        markup.row(button_1, button_2)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:', reply_markup=markup)


@bot.message_handler(commands=['help'])
def send_help_info(message):
    bot.send_message(
        message.chat.id,
        '–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤, –Ω—É–∂–Ω—ã–π –≤–∞–º –≥–æ—Ä–æ–¥'
                     )


def lowercase_list(data):
    data = map(lambda x: x.lower(), data)
    return (list(data))


def render_answer(weather, town):
    try:
        answer = f"""*{town}*
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞üå°Ô∏è {weather['temp']}¬∞, {weather['condition']}
–í–ª–∞–∂–Ω–æ—Å—Ç—åüíß{weather['humidity']}%
–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞üí® {weather['wind_speed']} –∫–º/—á, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {weather['wind_dir']}
[–£–∑–Ω–∞–π—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ {town}.]({HOST_URL})
        """
    except Exception:
        return '–ù–µ–ø—Ä–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω –≥–æ—Ä–æ–¥'
    return answer


@bot.message_handler()
def reply(message):
    if message.text.lower() in lowercase_list(TOWNS):
        weather = get_weather(message.text)
        answer = render_answer(weather, message.text)
        filepath = join(TOWN_IMAGES_FOLDER, f'{message.text}.jpg')
        with open(filepath, 'rb') as photo:
            bot.send_photo(message.chat.id,
                           photo,
                           caption=answer,
                           parse_mode='Markdown'
                           )
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω –≥–æ—Ä–æ–¥')


if __name__ == '__main__':
    bot.polling(none_stop=True)
